{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import ValidCode from \"@/components/ValidCode\";\n\nexport default {\n  name: \"Login\",\n  // components: {\n  //  ValidCode\n  // },\n\n  data() {\n    // const validateCode = (rule, value, callback) => {\n    //   if (value === '') {\n    //     callback(new Error('请输入验证码'))\n    //   } else if (value.toLowerCase() !== this.code) {\n    //     callback(new Error('验证码错误'))\n    //   } else {\n    //     callback()\n    //   }\n    // }\n\n    return {\n      form: {\n        // code: '',  // 验证码组件传递过来的code\n      },\n      // role: 'ADMIN'\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          validator: validateCode,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    getCode(code) {\n      this.code = code.toLowerCase();\n    },\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 账号密码验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","rules","username","required","message","trigger","password","code","validator","validateCode","created","methods","getCode","toLowerCase","login","$refs","validate","valid","$request","post","then","res","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 400px; padding: 30px; background-color: #2b2b2b; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: white\">请先登录</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-select  v-model=\"form.role\" placeholder=\"请选择角色\" style=\"width: 100%\">\r\n          <el-option label=\"系统管理员\" value=\"ADMIN\"></el-option>\r\n          <el-option label=\"机房管理员\" value=\"LABADMIN\"></el-option>\r\n          <el-option label=\"用户\" value=\"STUDENT\"></el-option>\r\n        </el-select>\r\n<!--        <el-form-item prop=\"code\" style=\"margin-top: 18px;\">-->\r\n<!--          <div style=\"display: flex\">-->\r\n<!--            <el-input placeholder=\"请输入验证码\" prefix-icon=\"el-icon-circle-check\" size=\"medium\" style=\"flex: 1\" v-model=\"form.code\"></el-input>-->\r\n<!--            <div style=\"flex: 1; !important;height: 30px\">-->\r\n<!--              <valid-code @update:value=\"getCode\" />-->\r\n<!--            </div>-->\r\n<!--          </div>-->\r\n<!--        </el-form-item>-->\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: #333; border-color: #333; color: white\" @click=\"login\">Login</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            没有账号？请点击 <a href=\"/register\">注册</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n// import ValidCode from \"@/components/ValidCode\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n   // components: {\r\n   //  ValidCode\r\n   // },\r\n\r\n  data() {\r\n    // const validateCode = (rule, value, callback) => {\r\n    //   if (value === '') {\r\n    //     callback(new Error('请输入验证码'))\r\n    //   } else if (value.toLowerCase() !== this.code) {\r\n    //     callback(new Error('验证码错误'))\r\n    //   } else {\r\n    //     callback()\r\n    //   }\r\n    // }\r\n\r\n    return {\r\n      form: {\r\n        // code: '',  // 验证码组件传递过来的code\r\n      },\r\n\r\n      // role: 'ADMIN'\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ],\r\n        code: [\r\n          { validator: validateCode, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    getCode(code){\r\n      this.code = code.toLowerCase()\r\n    },\r\n    login() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 账号密码验证通过\r\n          this.$request.post('/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n              this.$router.push('/')  // 跳转主页\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n</style>"],"mappings":";AAwCA;;AAEA;EACAA,IAAA;EACA;EACA;EACA;;EAEAC,KAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;MACAC,IAAA;QACA;MAAA,CACA;MAEA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,IAAA,GACA;UAAAC,SAAA,EAAAC,YAAA;UAAAJ,OAAA;QAAA;MAEA;IACA;EACA;EACAK,QAAA,GAEA;EACAC,OAAA;IACAC,QAAAL,IAAA;MACA,KAAAA,IAAA,GAAAA,IAAA,CAAAM,WAAA;IACA;IACAC,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAAnB,IAAA,EAAAoB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAd,IAAA;cACAe,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAAtB,IAAA;cACA,KAAA2B,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}